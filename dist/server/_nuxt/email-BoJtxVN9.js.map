{"version":3,"file":"email-BoJtxVN9.js","sources":["../../../../src/pages/login/components/email.vue"],"sourcesContent":["<template>\r\n\t<div class=\"googleLogin\" v-if=\"false\">\r\n\t\t<img class=\"icon\" type=\"image/svg+xml\" src=\"@/assets/images/login-google-icon..svg\"/>\r\n\t\t<span class=\"text\">{{ t(\"Login.googleLogin\") }}</span>\r\n\t</div>\r\n\t<p class=\"or\" v-if=\"false\">\r\n\t\t<span class=\"text\">{{ t(\"Login.or\") }}</span>\r\n\t</p>\r\n\t<div class=\"phoneWrap\"></div>\r\n<!--\t<div class=\"inputWrap\" :class=\"{ focus: item.isFocus, error: item.isError }\" v-for=\"(item, index) in formList\" :key=\"index\">-->\r\n<!--\t\t<div class=\"inputItem\">-->\r\n<!--\t\t\t<input :type=\"item.inputType\" class=\"in\" :placeholder=\"t(item.placeholder)\" @focus=\"formClass.bindChildFocus(index)\" @blur=\"formClass.bindChildBlur(index)\" v-model=\"item.value\"/>-->\r\n<!--\t\t\t<img class=\"icon\" src=\"@/assets/images/icons/clear.png\" v-if=\"item.value.length > 0\" @click.stop=\"formClass.bindChildClear(index)\"/>-->\r\n<!--\t\t\t<img class=\"icon\" src=\"@/assets/images/icons/eyes1.png\" v-if=\"item.isPassword && item.inputType === 'password'\" @click.stop=\"formClass.bindChildChangeInputType(index, 'text')\"/>-->\r\n<!--\t\t\t<img class=\"icon\" src=\"@/assets/images/icons/eyes2.png\" v-if=\"item.isPassword && item.inputType === 'text'\" @click.stop=\"formClass.bindChildChangeInputType(index, 'password')\"/>-->\r\n<!--\t\t</div>-->\r\n<!--\t\t<p class=\"inputTips\" v-if=\"item.tips.length > 0\">{{ t(item.tips) }}</p>-->\r\n<!--\t</div>-->\r\n        <publicInputForm :formList=\"formList\" :formClass=\"formClass\"></publicInputForm>\r\n\t<p class=\"fwd\">\r\n\t\t<nuxt-link-locale class=\"link\" to=\"/forgetPassword?type=1\">{{ t(\"Login.forget\") }}?</nuxt-link-locale>\r\n\t</p>\r\n\t<button class=\"subBtn\" @click=\"bindDoLogin(formList)\">{{ t(\"Login.title1\") }}</button>\r\n</template>\r\n<script setup>\r\nimport {modeList} from \"@/config/inputClass\";\r\nimport {ref} from \"vue\";\r\nimport {useAccount} from \"@/hooks/useAccount\";\r\n\r\nconst formClass = ref(new modeList([\"email\", \"logInPassword\"]));\r\nconst formList = ref(formClass.value.list);\r\nconst {t} = useI18n();\r\n\r\nconst {bindDoLogin} = useAccount()\r\n</script>\r\n<style scoped lang=\"scss\" src=\"./index.scss\"></style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,UAAM,YAAY,IAAI,IAAI,SAAS,CAAC,SAAS,eAAe,CAAC,CAAC;AAC9D,UAAM,WAAW,IAAI,UAAU,MAAM,IAAI;AACzC,UAAM,EAAC,EAAC,IAAI;AAEU,eAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}