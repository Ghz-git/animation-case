{"version":3,"file":"index-D6B4tX2N.js","sources":["../../../../src/components/public/tipsScroll/index.vue"],"sourcesContent":["<template>\r\n\t<div class=\"tips-scroll\" ref=\"carouselContainer\" @mouseenter=\"pause\" @mouseleave=\"resume\">\r\n\t\t<!-- <div class=\"no-msg\" v-if=\"!list.length\">{{ t(\"User.tips3\") }}</div> -->\r\n\t\t<div class=\"tips-scroll__inner\" ref=\"carousel\" v-if=\"list.length\">\r\n\t\t\t<div class=\"item\" v-for=\"(li, idx) in list\" :key=\"li\" ref=\"liWidth\">\r\n\t\t\t\t<div class=\"nation-group\" v-if=\"li.icon2\">\r\n\t\t\t\t\t<img :src=\"li.icon1\" alt=\"\" class=\"nation flag1\">\r\n\t\t\t\t\t<img :src=\"li.icon2\" alt=\"\" class=\"nation flag2\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<img :src=\"li.icon1\" alt=\"\" class=\"sigle\" v-if=\"!li.icon2\">\r\n\t\t\t\t<span class=\"type\">{{ li.type }}</span>\r\n\t\t\t\t<span class=\"num\">{{ li.sell }}</span>\r\n\t\t\t\t<span class=\"situation\">{{ li.zd }}</span>\r\n\t\t\t\t<span class=\"situation\">({{ li.zdRate }})</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script setup>\r\nimport {SYMBOLS_LIST} from \"@/data/image.js\"\r\nimport {ref, reactive, onMounted, onUnmounted, nextTick} from \"vue\"\r\nimport {getNavigationQuotes} from \"@/api/home.js\"\r\nimport {subtract, device} from \"@/utils/tools\";\r\n\r\nconst {t} = useI18n();\r\nconst carouselContainer = ref(null);\r\nconst carousel = ref(null);\r\nconst liWidth = ref(null);\r\nlet list = ref([])\r\nlet copyList = reactive([])\r\nconst requestId = ref(null) // 保存帧动画id\r\nconst count = ref(0) // 移动的位置\r\nlet isPaused = false\r\nconst i18n = useI18n()\r\nconst flagList = SYMBOLS_LIST()\r\nlet initTimer = new Date().getTime()\r\nlet fps = 30\r\nconst onScroll = () => {\r\n\tlet time = new Date().getTime()\r\n\tif (time - initTimer >= fps) {\r\n\t\tcount.value++\r\n\t\tif (count.value >= parseInt(liWidth.value[0]?.offsetWidth) * (list.length - copyList.length)) {\r\n\t\t\t// 当移动的位置大于等于当前列表的寬度時 重置移动位置\r\n\t\t\tcount.value = 0\r\n\t\t}\r\n\t\tif (carousel.value) {\r\n\t\t\tcarousel.value.style.transform = `translateX(-${count.value}px)`\r\n\t\t}\r\n\t\tinitTimer = time\r\n\t}\r\n\trequestId.value = requestAnimationFrame(onScroll)\r\n}\r\n// 开始滚\r\nconst start = () => {\r\n\tif (requestId.value) {\r\n\t\t// 有动画 先移除动画\r\n\t\twindow.cancelAnimationFrame(requestId.value);\r\n\t} else {\r\n\t\t// 计算当前容器寬度 能展示幾条数据\r\n\t\tlet listNum = carouselContainer.value.offsetWidth / parseInt(liWidth.value[0]?.offsetWidth)\r\n\t\t// 复制一份首次展示出来的那些数据，添加到数组末尾 --- 为实现滚动位置重置做铺垫\r\n\t\tlet newCopyList = reactive([]);\r\n\t\tcopyList = list.value.slice(0, listNum);\r\n\t\tif (copyList.length < listNum) {\r\n\t\t\t// 處理數據太少的情況\r\n\t\t\tlet len = listNum - copyList.length\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tnewCopyList.unshift(...copyList)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlist.value.push(...[...newCopyList, ...copyList])\r\n\t}\r\n\t// 开始动画\r\n\trequestId.value = requestAnimationFrame(onScroll)\r\n}\r\n// 结束滚动\r\nconst stop = () => {\r\n\tif (requestId.value) {\r\n\t\twindow.cancelAnimationFrame(requestId.value);\r\n\t}\r\n}\r\n// 鼠标悬浮暂停\r\nconst pause = () => {\r\n\tif (list.value.length > 0) {\r\n\t\twindow.cancelAnimationFrame(requestId.value)\r\n\t\tisPaused = true\r\n\t}\r\n}\r\n// 鼠标离开继续滚动\r\nconst resume = () => {\r\n\tif (!isPaused) return\r\n\trequestId.value = requestAnimationFrame(onScroll)\r\n\tisPaused = false\r\n}\r\nconst header = {\r\n\t'Organization-No': 3,\r\n\t'Lang': i18n.locale.value\r\n}\r\nconst symbolsList = [\"BTCUSD\", \"ETHUSD\", \"EURUSD\", \"USDJPY\", \"XAUUSD\", \"XAGUSD\", \"US500\", \"GER30\", \"UKOIL\", \"USOIL\"]\r\nconst getList = () => {\r\n\tgetNavigationQuotes({symbols: symbolsList}, header).then((res) => {\r\n\t\tlist.value.push(...computeData(res.data))\r\n\t\t// 處理請求數據太多導致頁面卡死情況\r\n\t\tif(list.value.length > 70) {\r\n\t\t\tlist.value.splice(0, 40)\r\n\t\t}\r\n\t\tnextTick(() => {\r\n\t\t\tstart()\r\n\t\t})\r\n\t}).catch(err => {\r\n\t\tconsole.log(err, \"NO MESSAGE\");\r\n\t})\r\n}\r\nconst computeData = (list) => {\r\n\tif (list) {\r\n\t\tlist.forEach((item) => {\r\n\t\t\tflagList.find((val) => {\r\n\t\t\t\tif (item.symbol === val.symbols) {\r\n\t\t\t\t\titem.icon1 = val.icon1\r\n\t\t\t\t\titem.icon2 = val.icon2\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\titem.type = item.symbol\r\n\t\t\titem.sell = (item.bid).toFixed(item.digits)\r\n\t\t\titem.zd = subtract(item.sell, item.open) > 0 ? \"+\" + subtract(item.sell, item.open) : subtract(item.sell, item.open)\r\n\t\t\titem.zdRate = (device(subtract(item.sell, item.open), item.open) * 100).toFixed(2) + \"%\"\r\n\t\t})\r\n\t}\r\n\treturn list.reverse()\r\n}\r\nlet timer = null\r\nonMounted(() => {\r\n\tgetList()\r\n\ttimer = setInterval(() => {\r\n\t\tgetList()\r\n\t}, 30000)\r\n})\r\nonUnmounted(() => {\r\n\tstop()\r\n\tclearInterval(timer);\r\n})\r\n</script>\r\n<style scoped lang='scss' src=\"./index.scss\"></style>"],"names":[],"mappings":";;;;;;;;;;;;;;AAwBY,YAAQ;AACd,UAAA,oBAAoB,IAAI,IAAI;AACjB,QAAI,IAAI;AACT,QAAI,IAAI;AACpB,QAAA,OAAO,IAAI,CAAA,CAAE;AACF,aAAS,CAAA,CAAE;AACR,QAAI,IAAI;AACZ,QAAI,CAAC;AAEnB,UAAM,OAAO;AAEG,KAAA,oBAAI,KAAK,GAAE,QAAQ;AA2DpB,KAAA;AAAA,MACd,mBAAmB;AAAA,MACnB,QAAQ,KAAK,OAAO;AAAA,IACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}