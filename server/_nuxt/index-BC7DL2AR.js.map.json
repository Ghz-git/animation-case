{"file":"index-BC7DL2AR.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,UAAM,WAAW,IAAI;AAAA,MACb;AAAA,QACQ,MAAM;AAAA,QACN,MAAM;AAAA,MACb;AAAA,MACD;AAAA,QACQ,MAAM;AAAA,QACN,MAAM;AAAA,MACb;AAAA,IACT,CAAC;AAID,UAAM,WAAW,IAAI;AAAA,MACb,SAAS;AAAA,MACT,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,MACV,KAAK;AAAA,MACL,MAAM;AAAA,IACd,CAAC;AACD,UAAM,EAAE,EAAG,IAAG,QAAS;AACvB,UAAM,YAAY,IAAI,CAAC;AACvB,UAAM,WAAW,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../src/pages/news/index.vue"],"sourcesContent":["<template>\r\n        <div class=\"newsMain\">\r\n                <div class=\"container\">\r\n                        <div class=\"pc_show\">\r\n                                <publicBreadcrumb :item=\"pageItem\"></publicbreadcrumb>\r\n                        </div>\r\n                        <div class=\"pageTitle\">\r\n                                <h2 class=\"title\">{{ t('common.news') }}</h2>\r\n                        </div>\r\n                        <ul class=\"newsList\" v-if=\"newsList.length>0\">\r\n                                <li v-for=\"(item, index) in newsList\" :key=\"index\">\r\n                                        <img class=\"img\" alt=\"\" :src=\"item.cover\" />\r\n                                        <div class=\"content\">\r\n                                                <h3 class=\"title\">{{ item.title }}</h3>\r\n                                                <div class=\"text\">{{ item.synopsis }}</div>\r\n                                                <div class=\"timeLine\">\r\n                                                        <p class=\"time\"><i class=\"iconfont icon-shijian\"></i>{{\r\n                                                                formatterTimeZone(item.releaseTime) }}</p>\r\n                                                        <p class=\"detail\" @click=\"bindGoDetail(item.url)\">\r\n                                                                <span>{{ t('common.newsDetails') }}</span><i\r\n                                                                        class=\"iconfont icon-fanhui\"></i>\r\n                                                        </p>\r\n                                                </div>\r\n                                        </div>\r\n                                </li>\r\n                        </ul>\r\n                        <p v-else class=\"nodata\">No Data !</p>\r\n                        <div class=\"pagePagination\" v-if=\"totalPage > 1\">\r\n                                <p class=\"taps\" :class=\"{ none: pageData.current === 1 }\"\r\n                                        @click=\"bindChangePage('prev')\"><i class=\"iconfont icon-fanhui\"></i></p>\r\n                                <p class=\"num\">{{ pageData.current }}</p>\r\n                                <p class=\"taps next\" :class=\"{ none: pageData.current === totalPage }\"\r\n                                        @click=\"bindChangePage('next')\"><i class=\"iconfont icon-fanhui\"></i></p>\r\n                        </div>\r\n                </div>\r\n        </div>\r\n</template>\r\n<script setup>\r\nimport { getNewsList } from '@/api/news'\r\nimport { formatterTimeZone } from '@/utils/tools'\r\nconst pageItem = ref([\r\n        {\r\n                path: '/academy',\r\n                page: 'User.tips7',\r\n        },\r\n        {\r\n                path: '',\r\n                page: 'common.news',\r\n        },\r\n])\r\ndefineOptions({\r\n        name: 'newsPage',\r\n})\r\nconst pageData = ref({\r\n        station: 'mft',\r\n        top: '1',\r\n        status: 0,\r\n        size: 10,\r\n        current: 1,\r\n        classify: '',\r\n        tag: '',\r\n        type: '',\r\n})\r\nconst { t } = useI18n()\r\nconst totalPage = ref(0)\r\nconst newsList = ref([])\r\nonMounted(() => {\r\n        getList()\r\n})\r\nconst getList = () => {\r\n        getNewsList(pageData.value).then((res) => {\r\n                if (res.data) {\r\n                        newsList.value = res.data.records\r\n                        totalPage.value = res.data.pages\r\n                }\r\n        })\r\n}\r\nconst bindChangePage = (type) => {\r\n        if ((type === \"prev\" && pageData.value.current === 1) || (type === \"next\" && pageData.value.current === totalPage.value)) {\r\n                return false\r\n        }\r\n        pageData.value.current =\r\n                type === 'next' ? pageData.value.current + 1 : pageData.value.current - 1\r\n        getList()\r\n}\r\nconst bindGoDetail = (url) => {\r\n        const urlArr = url.split('/').filter(item => item).reverse()\r\n        nuxtTo(`/news/${urlArr[1]}/${urlArr[0]}`, { key: urlArr[2] })\r\n}\r\n</script>\r\n<style scoped lang=\"scss\" src=\"./index.scss\"></style>\r\n"],"version":3}