{"version":3,"file":"email-D1EzQ1vF.js","sources":["../../../../src/pages/register/components/email.vue"],"sourcesContent":["<template>\r\n        <div class=\"googleLogin\" v-if=\"false\">\r\n                <img class=\"icon\" type=\"image/svg+xml\" src=\"@/assets/images/login-google-icon..svg\" />\r\n                <span class=\"text\">{{ t('Login.googleLogin') }}</span>\r\n        </div>\r\n        <p class=\"or\" v-if=\"false\">\r\n                <span class=\"text\">{{ t('Login.or') }}</span>\r\n        </p>\r\n        <div class=\"phoneWrap\"></div>\r\n<!--        <div class=\"inputWrap\" :class=\"{ focus: item.isFocus, error: item.isError }\" v-for=\"(item, index) in formList\" :key=\"index\">-->\r\n<!--                <div class=\"inputItem\">-->\r\n<!--                        <input :type=\"item.inputType\" class=\"in\" :placeholder=\"t(item.placeholder)\" @focus=\"formClass.bindChildFocus(index)\" @blur=\"formClass.bindChildBlur(index)\" @input=\"formClass.bindChildInputCheck(index)\" v-model=\"item.value\" />-->\r\n<!--                        <img class=\"icon\" src=\"@/assets/images/icons/clear.png\" v-if=\"item.value.length > 0\" @click.stop=\"formClass.bindChildClear(index)\" />-->\r\n<!--                        <img class=\"icon\" src=\"@/assets/images/icons/eyes1.png\" v-if=\"item.isPassword && item.inputType === 'password'\" @click.stop=\"formClass.bindChildChangeInputType(index, 'text')\" />-->\r\n<!--                        <img class=\"icon\" src=\"@/assets/images/icons/eyes2.png\" v-if=\"item.isPassword && item.inputType === 'text'\" @click.stop=\"formClass.bindChildChangeInputType(index, 'password')\" />-->\r\n<!--                        <span class=\"getCode\" v-if=\"item.type === 'validCode'\" @click=\"bindStartCode\">-->\r\n<!--                                {{ t(item.codeData.sendText) }}-->\r\n<!--                                <span v-if=\"item.codeData.isShow\">({{ item.codeData.sendTime }}s)</span>-->\r\n<!--                        </span>-->\r\n<!--                </div>-->\r\n<!--                <div class=\"checkPwdArea\" :class=\"{ active: item.value.length > 0 && !item.checkPwdData.isCheckOK }\" v-if=\"item.type === 'password'\">-->\r\n<!--                        <p class=\"text\" :class=\"{ ok: rule.bol }\" v-for=\"(rule, index2) in item.checkPwdData.rules\" :key=\"index2\">-->\r\n<!--                                <i class=\"iconfont icon-gouxuan\" v-if=\"rule.bol\"></i>-->\r\n<!--                                <i class=\"iconfont icon-guanbi\" v-else></i>-->\r\n<!--                                <span>{{ t(rule.str) }}</span>-->\r\n<!--                        </p>-->\r\n<!--                </div>-->\r\n<!--                <p class=\"inputTips\" v-if=\"item.tips.length > 0\">{{ t(item.tips) }}</p>-->\r\n<!--        </div>-->\r\n        <publicInputForm :formList=\"formList\" :formClass=\"formClass\"></publicInputForm>\r\n        <button class=\"subBtn mt40\" @click=\"bindDoRegister(formList)\">{{ t('Login.title2') }}</button>\r\n<!--        <button id=\"captcha-button\">button</button>-->\r\n<!--        <div id=\"captcha-element\"></div>-->\r\n</template>\r\n<script setup>\r\nimport { modeList, feedBackData, extractKeys } from '@/config/inputClass'\r\nimport { bindRegister, bindCheckValidCode, bindCheckUserRegister } from '@/api/login'\r\nimport { ref } from 'vue'\r\nimport { useUserToken, useUserInfo } from '@/store/user'\r\nimport { useCheckMobile } from '@/store/isMobile'\r\nimport { ga4 } from '@/utils/ga4'\r\nimport { useCaptcha } from \"@/hooks/useCaptcha\"\r\nimport { useAccount } from \"@/hooks/useAccount\"\r\nconst { bindDoRegister } = useAccount()\r\n\r\n\r\n\r\n// const submitBol = ref(false)\r\nconst { t } = useI18n()\r\n// const route = useRoute()\r\n// const source = route.query.source\r\nconst formClass = ref(new modeList(['email', 'validCode', 'password', 'checkPassword']))\r\nconst formList = ref(formClass.value.list)\r\n\r\n// const doRegister = _debounce(\r\n//         () => {\r\n//                 const data = feedBackData(formList.value)\r\n//                 if (!data) {\r\n//                         ElMessage.error(t('Login.inputTips10'))\r\n//                         return\r\n//                 }\r\n//                 const loading = ElLoading.service({\r\n//                         lock: true,\r\n//                         background: 'rgba(0, 0, 0, 0.5)',\r\n//                 })\r\n//                 const param = extractKeys(data, ['email', 'validCode', 'password'])\r\n//                 if (!submitBol.value) {\r\n//                         submitBol.value = true\r\n//                         bindCheckUserRegister(param)\r\n//                                 .then(() => {\r\n//                                         bindCheckValidCode(param)\r\n//                                                 .then(() => {\r\n//                                                         bindRegister(param)\r\n//                                                                 .then((res) => {\r\n//                                                                         loading.close()\r\n//                                                                         submitBol.value = false\r\n//                                                                         ElMessage.success({\r\n//                                                                                 message: `<span style=\"white-space: nowrap;\">${t('Login.signInSuccess')}</span>`,\r\n//                                                                                 dangerouslyUseHTMLString: true,\r\n//                                                                         })\r\n//                                                                         ga4({\r\n//                                                                                 types: 'sign_up_summit',\r\n//                                                                                 params: {\r\n//                                                                                         sign_up_type:\r\n//                                                                                                 'email',\r\n//                                                                                 },\r\n//                                                                                 utmKeys: ['id'],\r\n//                                                                         })\r\n//                                                                         let adroll_adv_id =\r\n//                                                                                 'GLR65GIFU5DBVLG6I7DMO5'\r\n//                                                                         let adroll_pix_id =\r\n//                                                                                 '36VDHFYP3FCTXPPI7DPXXF'\r\n//                                                                         const timer = setInterval(\r\n//                                                                                 () => {\r\n//                                                                                         if (\r\n//                                                                                                 __adroll\r\n//                                                                                         ) {\r\n//                                                                                                 clearInterval(\r\n//                                                                                                         timer,\r\n//                                                                                                 )\r\n//                                                                                                 __adroll._ensure_global(\r\n//                                                                                                         'adroll_adv_id',\r\n//                                                                                                         adroll_adv_id,\r\n//                                                                                                 )\r\n//                                                                                                 __adroll._ensure_global(\r\n//                                                                                                         'adroll_pix_id',\r\n//                                                                                                         adroll_pix_id,\r\n//                                                                                                 )\r\n//                                                                                                 try {\r\n//                                                                                                         __adroll.record_user(\r\n//                                                                                                                 {\r\n//                                                                                                                         adroll_segments:\r\n//                                                                                                                                 '1739a0b3',\r\n//                                                                                                                 },\r\n//                                                                                                         )\r\n//                                                                                                 } catch (err) {}\r\n//                                                                                         }\r\n//                                                                                 },\r\n//                                                                                 100,\r\n//                                                                         )\r\n//                                                                         const localePath =\r\n//                                                                                 useLocalePath()\r\n//                                                                         const userToken =\r\n//                                                                                 useUserToken()\r\n//                                                                         const userInfo =\r\n//                                                                                 useUserInfo()\r\n//                                                                         userToken.setToken(\r\n//                                                                                 res.data.tokenValue,\r\n//                                                                         )\r\n//                                                                         userInfo.setInfo(res)\r\n//                                                                         setTimeout(() => {\r\n//                                                                                 if (\r\n//                                                                                         source ===\r\n//                                                                                         'app'\r\n//                                                                                 ) {\r\n//                                                                                         uni.navigateTo(\r\n//                                                                                                 {\r\n//                                                                                                         url: '/pages/login/index',\r\n//                                                                                                 },\r\n//                                                                                         )\r\n//                                                                                 } else {\r\n//                                                                                         navigateTo({\r\n//                                                                                                 path: localePath(\r\n//                                                                                                         '/user',\r\n//                                                                                                 ),\r\n//                                                                                         })\r\n//                                                                                 }\r\n//                                                                         }, 500)\r\n//                                                                 })\r\n//                                                                 .catch(() => {\r\n//                                                                         loading.close()\r\n//                                                                         submitBol.value = false\r\n//                                                                 })\r\n//                                                 })\r\n//                                                 .catch(() => {\r\n//                                                         loading.close()\r\n//                                                         submitBol.value = false\r\n//                                                 })\r\n//                                 })\r\n//                                 .catch(() => {\r\n//                                         loading.close()\r\n//                                         submitBol.value = false\r\n//                                 })\r\n//                 }\r\n//         },\r\n//         1000,\r\n//         { leading: true, trailing: false },\r\n// )\r\n\r\n// const bindStartCode = () => {\r\n//         const button = document.getElementById('captcha-button')\r\n//         const idx = formClass.value.list.findIndex(\r\n//                 (item) => item.type === 'email' || item.type === 'phone',\r\n//         )\r\n//         const i = formClass.value.list.findIndex((item) => item.type === 'validCode')\r\n//         if (idx !== -1) {\r\n//                 formClass.value.bindChildBlur(idx)\r\n//                 if (formClass.value.list[idx].isOK && !formClass.value.list[i].codeData.isSend) {\r\n//                         button.click()\r\n//                 }\r\n//         }\r\n// }\r\nlet captcha = null\r\nonMounted(() => {\r\n        ga4({\r\n                types: 'enter_sign_up',\r\n                params: {\r\n                        sign_up_type: 'email',\r\n                },\r\n                isDailyVisit: true,\r\n                utmKeys: ['id', 'campaign', 'source', 'medium', 'term', 'content'],\r\n        })\r\n        useCaptcha(formClass.value,\"register\")\r\n        // let script = null\r\n        // script = document.createElement('script')\r\n        // script.src = 'https://o.alicdn.com/captcha-frontend/aliyunCaptcha/AliyunCaptcha.js'\r\n        // script.type = 'text/javascript'\r\n        // document.head.appendChild(script)\r\n        // script.onload = () => {\r\n        //         initAliyunCaptcha({\r\n        //                 SceneId: useCheckMobile().getItem() ? '9v5glil4i' : '9sjme0s4n',\r\n        //                 prefix: 'uqby6fg',\r\n        //                 mode: 'popup',\r\n        //                 element: '#captcha-element',\r\n        //                 button: '#captcha-button',\r\n        //                 captchaVerifyCallback: captchaVerifyCallback,\r\n        //                 onBizResultCallback: onBizResultCallback,\r\n        //                 getInstance: getInstance,\r\n        //                 slideStyle: {\r\n        //                         width: 300,\r\n        //                         height: 40,\r\n        //                 },\r\n        //                 language: 'en',\r\n        //                 immediate: false,\r\n        //                 region: 'cn',\r\n        //         })\r\n        // }\r\n        // function getInstance(val) {\r\n        //         captcha = val\r\n        // }\r\n        // async function captchaVerifyCallback(captchaVerifyParam) {\r\n        //         formClass.value.bindChildSendCode(captchaVerifyParam)\r\n        //         const returnData = await formClass.value.returnData()\r\n        //         return {\r\n        //                 captchaResult: true, // 验证码验证是否通过，boolean类型，必选\r\n        //                 bizResult: returnData.codeData.captcha, // 业务验证是否通过，boolean类型，可选，若为无业务验证结果的场景，bizResult可以为空\r\n        //         }\r\n        // }\r\n        // function onBizResultCallback(bizResult) {}\r\n})\r\nonBeforeUnmount(() => {\r\n        // document.getElementById('aliyunCaptcha-mask')?.remove()\r\n        // document.getElementById('aliyunCaptcha-window-popup')?.remove()\r\n})\r\nonUnmounted(() => {\r\n        formClass.value.bindClearTimer()\r\n})\r\n</script>\r\n<style scoped lang=\"scss\" src=\"@/pages/login/components/index.scss\"></style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2C2B,eAAW;AAKhC,UAAA,EAAE,MAAM;AAGR,UAAA,YAAY,IAAI,IAAI,SAAS,CAAC,SAAS,aAAa,YAAY,eAAe,CAAC,CAAC;AACvF,UAAM,WAAW,IAAI,UAAU,MAAM,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;"}